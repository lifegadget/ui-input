<h3>Component::<code>email-input</code></h3>

<h4>Overview</h4>
<div class="row">
    <desc>
        The <code>email-input</code> control is a text-input control for capturing emails. As a result it is a largely a functional subset.
        We'll not focus on any of the text-input aspects of the control and focus on the deltas instead. 
    </desc>
    <desc>
        <ul>
            <li>
                The HTML5 spec provides a 'email' type which this component happily use
                <ul>
                    <li>amongst other things this gives us to CSS psuedo events to work with <code>valid</code> and <code>invalid</code></li>
                    <li>more importantly it provides context to browsers so they can make our lives better with better keyboards, etc.</li>
                </ul>
            </li>
            <li>
                While arguably the psuedo-classes diminish the need for an 'invalidEmail' rule there are still some niceties in having this rule
                and considering you are a creature of luxury we've bundled it in with the rules listed below. Champagne anyone?
            </li>
        </ul>
        
    </desc>
</div>

<h4>Rules</h4>
<div class="row">
    <desc>
        The following rules are specific to emails, all text-input rules are also available.
    </desc>
    <desc>
        <ul>
            <li>
                <code>invalidEmail</code> -
                fires when an email becomes invalid structurally, listens on <em>focusIn</em> and <em>focusOut</em> events but not keyboard events. 
                If you want to provide visual feedback AS the user types in the field you can use the pseudo class or hook into 
                the <code>onKeyUp</code> event.
            </li>
            <li>
                <code>invalidDomain</code> - 
                rather than checking the email's structural validity, this rule looks at the domain that the email is from and fires if the email is either <em>from</em> your blacklist or <em>not</em> on your whitelist (if one was specified). For instance: 
                    <div class="row">
                    <div class="col-xs-4">
                        {{#code-block lang='hbs'}}
\{{email-input 
    rules='invalidEmail' 
    ruleParamInvalidEmail=validEmails
}}
                        {{/code-block}}
                    </div>
                    <div class="col-xs-8">
                        {{#code-block lang='js'}}
// app/components/application.js
Ember.Controller.extend {
    validEmails: {
        whitelist: ['mycompany.com','google.com'],
        blacklist: ['dummy.mycompany.com']
    }
}
                        {{/code-block}}
                    </div>                 
                </div>
                
            </li>
        </ul>
    </desc>
</div>


<h4>Example</h4>
<div class="row">
    <desc>
        Have fun playing around with the email input control. The variables listed are not a complete list but should give you enough to get a sense
        for the component:
    </desc>        
</div>


<div class="examples">
    <table class="row">
        <tr>
            <td class="col-xs-12 col-sm-7 text-center align-middle">
                {{email-input 
                    size=size 
                    width=width 
                    height=height
                    textAlign=textAlign 
                    placeholder='email-input' 
                    style=style
                    color=color
                    textColor=textColor
                    backgroundColor=backgroundColor
                    borderColor=borderColor
                    outlineColor=outlineColor
                    animateFocusIn=animateFocusIn
                    animateFocusOut=animateFocusOut
                    animateMouseEnter=animateMouseEnter
                    animateMouseDown=animateMouseDown
                    animateSubmit=animateSubmit
                    animateChange=animateChange
                    animateRuleInvalidEmail=animateRuleInvalidEmail
                    animateRuleInvalidDomain=animateRuleInvalidDomain
                    rules=_rules
                    defaultRules=defaultRules
                    passwordSecurity=strength
                    showPassword=showPassword
                }}
            </td>
            <td class="hidden-xs col-sm-5">
                {{#code-block language="handlebars" poll=500}}
\{{email-input 
    {{#if size}}size='{{size}}' 
    {{/if}}{{#if width}}width='{{width}}' 
    {{/if}}{{#if height}}height='{{height}}'
    {{/if}}{{#if textAlign}}textAlign='{{textAlign}}'
    {{/if}}{{#if placeholder}}placeholder='password-input' 
    {{/if}}{{#if style}}style='{{style}}'
    {{/if}}{{#if color}}color='{{color}}'
    {{/if}}{{#if textColor}}textColor='{{textColor}}'
    {{/if}}{{#if backgroundColor}}backgroundColor={{backgroundColor}}
    {{/if}}{{#if borderColor}}borderColor='{{borderColor}}'
    {{/if}}{{#if outlineColor}}outlineColor='{{outlineColor}}'
    {{/if}}{{#if animateFocusIn}}animateFocusIn='{{animateFocusIn}}'
    {{/if}}{{#if animateFocusOut}}animateFocusOut='{{animateFocusOut}}'
    {{/if}}{{#if animateMouseEnter}}animateMouseEnter='{{animateMouseEnter}}'
    {{/if}}{{#if animateMouseDown}}animateMouseDown='{{animateMouseDown}}'
    {{/if}}{{#if animateSubmit}}animateSubmit='{{animateSubmit}}'
    {{/if}}{{#if animateChange}}animateChange='{{animateChange}}'
    {{/if}}{{#if animateRuleInvalidEmail}}animateRuleInvalidEmail='{{animateRuleInvalidEmail}}'
    {{/if}}{{#if animateRuleInvalidDomain}}animateRuleInvalidDomain='{{animateRuleInvalidDomain}}'
    {{/if}}{{#if rules}}rules={{_rules}}
    {{/if}}{{#if length}}length={{length}}
    {{/if}}{{#if showPassword}}showPassword={{showPassword}}{{/if}}
}}   
                {{/code-block}}         
            </td>
        </tr>
    </table>
</div>
<p></p>
<div class="configuration col-xs-12">
    <div class="config-icon col-xs-1">{{icon-cog size="2x"}}</div>
    <div class="config-section col-xs-11">
        <span class="col-xs-12 col-sm-9">
            Rules: {{ui-button-radio size='small' choices='none,invalidEmail,invalidDomain' selected=rules}}&nbsp;&nbsp;&nbsp;
            Default Rules: {{defaultRules}}
            <p></p>
            Domain Whitelist: {{text-input width='30%' size='small' disabled=hasInvalidDomainRule}} &nbsp;&nbsp;
            Blacklist: {{text-input width='30%' size='small' disabled=hasInvalidDomainRule}}
            <hr/>
            Size: {{ui-button-radio size='small' choices='tiny,small,default,large,huge' selected=size}}
            Width: {{text-input size='small' value=width width='60px'}} 
            Height: {{text-input size='small' value=height width='60px'}} <br/>
            <p></p>
            Style:
            {{ui-button-radio size='small' choices='bootstrap,flat' selected=style}} &nbsp;&nbsp;
            Text Alignment: 
            {{ui-button-radio size='small' choices='left,center,right' selected=textAlign}}
            <p></p>
            <hr/>
            Color Class:            
            {{ui-button-radio size='small' choices='default,success,info,primary,warning,error' selected=color}}
            <p></p>
            Color (using style props):
            <p></p>
            Text: {{text-input width='85px' size='tiny' style='flat' textAlign='center' value=textColor}} &nbsp;
            Back: {{text-input width='85px' size='tiny' style='flat' textAlign='center' value=backgroundColor}} &nbsp;
            Border: {{text-input width='85px' size='tiny' style='flat' textAlign='center' value=borderColor}} &nbsp;
            Outline: {{text-input width='85px' size='tiny' style='flat' textAlign='center' value=outlineColor}} &nbsp;
            
            
        </span>
        <span class="hidden-xs col-sm-3 text-right">
            <strong>Animation Rule Events</strong>
            <hr/>
            invalidEmail:
            {{text-input width='42%' size='tiny' value=animateRuleInvalidEmail}}<br/>
            invalidDomain:
            {{text-input width='42%' size='tiny' value=animateRuleInvalidDomain}}<br/>
            <p>&nbsp;<br/></p>
            <strong>Animation Other Events</strong>
            <hr/>
            focusIn:
            {{text-input width='42%' size='tiny' value=animateFocusIn}}<br/>
            focusOut:
            {{text-input width='42%' size='tiny' value=animateFocusOut}}<br/>
            mouseEnter:
            {{text-input width='42%' size='tiny' value=animateMouseEnter}}<br/>
            mouseDown:
            {{text-input width='42%' size='tiny' value=animateMouseClick}}<br/>
            submit:
            {{text-input width='42%' size='tiny' value=animateSubmit}}<br/>
            change:
            {{text-input width='42%' size='tiny' value=animateChange}}<br/>
            
        </span>
    </div>
</div>


